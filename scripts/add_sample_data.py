from backend.services.data_service import DataService
from shared.types import HospitalProfile, StudentProfile, Position
from datetime import datetime

# Sample hospital data for Hamburg
SAMPLE_HOSPITALS = [
    {
        "name": "Universitätsklinikum Hamburg-Eppendorf (UKE)",
        "email": "uke@example.com",
        "password": "password123",
        "location": "Martinistraße 52, 20251 Hamburg",
        "latitude": 53.5897,
        "longitude": 9.9756
    },
    {
        "name": "Asklepios Klinik St. Georg",
        "email": "st.georg@example.com",
        "password": "password123",
        "location": "Lohmühlenstraße 5, 20099 Hamburg",
        "latitude": 53.5553,
        "longitude": 10.0114
    },
    {
        "name": "Asklepios Klinik Barmbek",
        "email": "barmbek@example.com",
        "password": "password123",
        "location": "Rübenkamp 220, 22307 Hamburg",
        "latitude": 53.5869,
        "longitude": 10.0406
    }
]

# Sample position data
SAMPLE_POSITIONS = [
    {
        "hospital_name": "Universitätsklinikum Hamburg-Eppendorf (UKE)",
        "department": "Cardiology",
        "title": "Research Assistant in Cardiology",
        "description": "Support ongoing research in heart failure studies",
        "duration": "3 months",
        "requirements": ["Basic ECG knowledge", "Medical student year 2+"],
        "stipend": 750.0
    },
    {
        "hospital_name": "Asklepios Klinik St. Georg",
        "department": "Emergency Medicine",
        "title": "Emergency Department Assistant",
        "description": "Assist in the emergency department during busy hours",
        "duration": "6 months",
        "requirements": ["Basic life support certification", "Medical student year 3+"],
        "stipend": 800.0
    },
    {
        "hospital_name": "Asklepios Klinik Barmbek",
        "department": "Pediatrics",
        "title": "Pediatric Ward Assistant",
        "description": "Support pediatric ward staff in daily activities",
        "duration": "4 months",
        "requirements": ["Experience with children", "Medical student year 2+"],
        "stipend": 700.0
    }
]

# Sample student data
SAMPLE_STUDENTS = [
    {
        "name": "Anna Müller",
        "year": 3,
        "interests": ["Cardiology", "Internal Medicine"],
        "availability": "July–September 2025",
        "certifications": ["Basic Life Support"]
    },
    {
        "name": "Luca Ferrari",
        "year": 4,
        "interests": ["Orthopedics", "Surgery"],
        "availability": "August 2025",
        "certifications": ["Surgical Hygiene Training"]
    },
    {
        "name": "Maya Patel",
        "year": 2,
        "interests": ["Pediatrics", "Public Health"],
        "availability": "June 2025",
        "certifications": None
    }
]

def add_sample_data():
    data_service = DataService()
    
    # Add sample hospitals
    hospital_ids = {}
    for hospital_data in SAMPLE_HOSPITALS:
        hospital = data_service.create_hospital_account(
            name=hospital_data["name"],
            email=hospital_data["email"],
            password=hospital_data["password"],
            location=hospital_data["location"],
            latitude=hospital_data["latitude"],
            longitude=hospital_data["longitude"]
        )
        hospital_ids[hospital_data["name"]] = hospital.id
        print(f"Added hospital: {hospital.name}")
    
    # Add sample positions
    for position_data in SAMPLE_POSITIONS:
        position = Position(
            id="",  # Will be generated by service
            hospital_id=hospital_ids[position_data["hospital_name"]],
            department=position_data["department"],
            title=position_data["title"],
            description=position_data["description"],
            duration=position_data["duration"],
            requirements=position_data["requirements"],
            stipend=position_data["stipend"],
            created_at=None,  # Will be set by service
            updated_at=None   # Will be set by service
        )
        data_service.create_position(position)
        print(f"Added position: {position.title} at {position_data['hospital_name']}")
    
    # Add sample students
    for student_data in SAMPLE_STUDENTS:
        student = StudentProfile(
            id="",  # Will be generated by service
            created_at=None,  # Will be set by service
            updated_at=None,  # Will be set by service
            **student_data
        )
        data_service.create_student(student)
        print(f"Added student: {student.name}")

if __name__ == "__main__":
    add_sample_data() 